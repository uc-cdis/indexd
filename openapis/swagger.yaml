swagger: '2.0'
info:
  description: >-
    Indexd is a prototype data indexing and tracking service. The code is open
    source on [github](https://github.com/LabAdvComp/indexd)
  version: 1.0.0
  title: Indexd OpenAPI Specification
  termsOfService: 'http://cdis.uchicago.edu/terms/'
  contact:
    email: cdis@uchicago.edu
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: data.example.domain
basePath: /
tags:
  - name: index
    description: 'Associate a file (object) with a unique id, and store some basic metadata.'
    externalDocs:
      description: Find out more
      url: 'https://github.com/LabAdvComp/indexd'
  - name: alias
    description: >-
      create an alias for an entity stored in an external system managed by some
      other authority
    externalDocs:
      description: Find out more
      url: 'https://github.com/LabAdvComp/indexd'
schemes:
  - https
paths:
  /index:
    post:
      tags:
        - index
      summary: Add a new entry to the index
      description: ''
      operationId: addEntry
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Metadata object that needs to be added to the store
          required: true
          schema:
            $ref: '#/definitions/InputInfo'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/OutputRef'
        '400':
          description: Invalid input
      security:
        - cdis_auth:
            - 'write:index'
            - 'read:index'
  '/index/{UUID}':
    get:
      tags:
        - index
      summary: Get the metadata associated with the given id
      description: Multiple status values can be provided with comma separated strings
      operationId: getMetadata
      produces:
        - application/json
      parameters:
        - name: UUID
          in: path
          description: entry id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/OutputInfo'
        '400':
          description: Invalid status value
      security:
        - cdis_auth:
            - 'write:index'
            - 'read:index'
  '/index/{UUID}?rev={REV}':
    put:
      tags:
        - index
      summary: Update an existing entry in the index
      description: ''
      operationId: updatePet
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: UUID
          in: path
          description: entry id
          required: true
          type: string
        - name: REV
          in: path
          description: data revision - simple consistency mechanism
          required: true
          type: string
        - in: body
          name: body
          description: index record that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/UpdateInputInfo'
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/OutputRef'
        '400':
          description: Invalid input
      security:
        - cdis_auth:
            - 'write:index'
            - 'read:index'
    delete:
      tags:
        - index
      summary: Delete an entry from the index
      description: ''
      operationId: deleteEntry
      produces:
        - application/json
      parameters:
        - name: UUID
          in: path
          description: entry id
          required: true
          type: string
        - name: REV
          in: path
          description: data revision - simple consistency mechanism
          required: true
          type: string
      responses:
        '400':
          description: Invalid ID supplied
      security:
        - cdis_auth:
            - 'write:index'
            - 'read:index'
  '/index/{UUID}/latest':
    get:
      summary: >-
        Get the metadata of the latest index record version associated with the
        given id
      description: Multiple status values can be provided with comma separated strings
      operationId: getLastestVersion
      produces:
        - application/json
      parameters:
        - name: UUID
          in: path
          description: entry id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/OutputInfo'
        '400':
          description: Invalid status value
      security:
        - cdis_auth:
            - 'write:index'
            - 'read:index'
  '/index/{UUID}/versions':
    get:
      summary: Get the metadata of index record versions associated with the given id
      description: Multiple status values can be provided with comma separated strings
      operationId: getAllVersion
      produces:
        - application/json
      parameters:
        - name: UUID
          in: path
          description: entry id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/OutputInfo'
        '400':
          description: Invalid status value
      security:
        - cdis_auth:
            - 'write:index'
            - 'read:index'
  '/alias/{ALIASSTRING}':
    put:
      tags:
        - alias
      summary: Add a new alias to the index
      description: ''
      operationId: addAlias
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ALIASSTRING
          in: path
          type: string
          required: true
          description: 'alias like ark:/31807/DC1-TESTARK'
        - in: body
          name: body
          description: Metadata object that needs to be added to the store
          required: true
          schema:
            $ref: '#/definitions/AliasInputInfo'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AliasRef'
        '400':
          description: Invalid input
      security:
        - cdis_auth:
            - 'write:index'
            - 'read:index'
    get:
      tags:
        - alias
      summary: Fetch an alias
      description: ''
      operationId: getAlias
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ALIASSTRING
          in: path
          type: string
          required: true
          description: 'alias like ark:/31807/DC1-TESTARK'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AliasOutputInfo'
        '400':
          description: Invalid input
      security:
        - cdis_auth:
            - 'write:index'
            - 'read:index'
  '/alias/{ALIASSTRING}?rev={REV}':
    put:
      tags:
        - alias
      summary: Update an alias
      description: ''
      operationId: updateAlias
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ALIASSTRING
          in: path
          type: string
          required: true
          description: 'alias like ark:/31807/DC1-TESTARK'
        - name: REV
          in: path
          type: string
          pattern: '^[a-z,0-9]{8}$'
          required: false
          description: Revision of the current alias to be updated. If you do not specify this then the last update wins in races.
        - in: body
          name: body
          description: Metadata object that needs to be added to the store
          required: true
          schema:
            $ref: '#/definitions/AliasInputInfo'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AliasRef'
        '400':
          description: Invalid input
      security:
        - cdis_auth:
            - 'write:index'
            - 'read:index'
    delete:
      tags:
        - alias
      summary: Delete an alias
      description: ''
      operationId: deleteAlias
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ALIASSTRING
          in: path
          type: string
          required: true
          description: 'alias like ark:/31807/DC1-TESTARK'
        - name: REV
          in: path
          type: string
          pattern: '^[a-z,0-9]{8}$'
          required: false
          description: Revision of the current alias to be deleted.
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AliasRef'
        '400':
          description: Invalid input
      security:
        - cdis_auth:
            - 'write:index'
            - 'read:index'
securityDefinitions:
  cdis_auth:
    type: oauth2
    authorizationUrl: 'https://data-commons.org/oauth/dialog'
    flow: implicit
    scopes:
      'write:index': modify any entry in the index
      'read:index': read any entry from the index
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  HashInfo:
    type: object
    properties:
      md5:
        type: string
        pattern: '^[0-9a-f]{32}$'
      sha:
        type: string
        pattern: '^[0-9a-f]{40}$'
      sha256:
        type: string
        pattern: '^[0-9a-f]{64}$'
      sha512:
        type: string
        pattern: '^[0-9a-f]{128}$'
  InputInfo:
    type: object
    required:
      - size
      - hashes
      - urls
      - form
    properties:
      did:
        type: string
        pattern: >-
          ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      base_id:
        type: string
        pattern: >-
          ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      form:
        type: string
        description: how the entry was submitted to storage
        enum:
          - object
          - container
          - multipart
      size:
        type: integer
        format: int64
        description: size in bytes
      file_name:
        type: string
      version:
        type: string
      urls:
        type: array
        items:
          type: string
      hashes:
        $ref: '#/definitions/HashInfo'
  UpdateInputInfo:
    type: object
    properties:
      base_id:
        type: string
        pattern: >-
          ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      file_name:
        type: string
      version:
        type: string
      urls:
        type: array
        items:
          type: string
  OutputRef:
    type: object
    properties:
      did:
        type: string
        pattern: >-
          ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      base_id:
        type: string
        pattern: >-
          ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      rev:
        type: string
        pattern: '^[0-9a-f]{8}$'
  AliasInputInfo:
    type: object
    properties:
      release:
        type: string
        description: has the entity been released?
        enum:
          - public
          - private
          - controlled
      size:
        type: integer
        format: int64
        description: size in bytes
      keeper_authority:
        description: who is keeping this entry up to date?
        type: string
      host_authority:
        description: who is hosting this entity?
        type: array
        items:
          type: string
      hashes:
        $ref: '#/definitions/HashInfo'
      metadata:
        type: string
  AliasRef:
    type: object
    properties:
      name:
        type: string
      rev:
        type: string
        pattern: '^[0-9a-f]{8}$'
  AliasOutputInfo:
    type: object
    properties:
      name:
        type: string
      rev:
        type: string
        pattern: '^[0-9a-f]{8}$'
      release:
        type: string
        description: has the entity been released?
        enum:
          - public
          - private
          - controlled
      size:
        type: integer
        format: int64
        description: size in bytes
      keeper_authority:
        description: who is keeping this entry up to date?
        type: string
      host_authority:
        description: who is hosting this entity?
        type: array
        items:
          type: string
      hashes:
        $ref: '#/definitions/HashInfo'
      metadata:
        type: string
  OutputInfo:
    type: object
    properties:
      did:
        type: string
        pattern: >-
          ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      baseid:
        type: string
        pattern: >-
          ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      rev:
        type: string
        pattern: '^[0-9a-f]{8}$'
      form:
        type: string
        description: how the entry was submitted to storage
        enum:
          - object
          - container
          - multipart
      size:
        type: integer
        format: int64
        description: size in bytes
      file_name:
        type: string
      version:
        type: string
      urls:
        type: array
        items:
          type: string
      hashes:
        $ref: '#/definitions/HashInfo'
      updated_date_by:
        type: string
        format: date-time
        description: last updated time
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
